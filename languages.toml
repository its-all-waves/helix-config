### C
[[language]]
name = "c"
indent = { tab-width = 4, unit = "    " }


### Go
[[language]]
name = "go"
auto-format = true
formatter = { command = "goimports" }

[language-server.gopls]
command = "gopls"

[language-server.gopls.config.hints]
assignVariableTypes = true
compositeLiteralFields = true
constantValues = true
functionTypeParameters = true
parameterNames = true
rangeVariableTypes = true

[language-server.golangci-lint-lsp]
command = "golangci-lint-langserver"

[language-server.golangci-lint-lsp.config]
command = [
  "golangci-lint",
  "run",
  "--out-format",
  "json",
  "--issues-exit-code=1",
]


# Markdown
[[language]]
name = "markdown"
formatter = { command = "prettier", args = ["--parser", "markdown"] }
indent = { tab-width = 4, unit = "    " }


### Web

# https://github.com/olrtg/emmet-language-server?tab=readme-ov-file#helix
[language-server.emmet-lsp]
command = "emmet-language-server"
args = ["--stdio"]

[language-server.deno-lsp]
command = "deno"
args = ["lsp"]
config.deno.enable = true

[[language]]
name = "typescript"
roots = ["deno.json", "deno.jsonc", "package.json"]
formatter = { command = "prettier", args = ["--parser", "typescript"] }
language-servers = ["typescript-language-server"]
### Deno settings
# language-servers = ["deno-lsp"]
auto-format = true

[[language]]
name = "tsx"
formatter = { command = "prettier", args = ["--parser", "typescript"] }
language-servers = ["typescript-language-server", "emmet-lsp"]
auto-format = true

[[language]]
name = "javascript"
# roots = ["deno.json", "deno.jsonc", "package.json"]
formatter = { command = "prettier", args = ["--parser", "javascript"] }
# language-servers = ["typescript-language-server", "deno-lsp"]
language-servers = ["typescript-language-server"]

[[language]]
name = "jsx"
formatter = { command = "prettier", args = ["--parser", "javascript"] }
language-servers = ["typescript-language-server", "emmet-lsp"]

[[language]]
name = "css"
formatter = { command = "prettier", args = ["--parser", "css"] }

[[language]]
name = "html"
# roots = [".git"]
formatter = { command = "prettier", args = ["--parser", "html"] }
language-servers = ["vscode-html-language-server", "emmet-lsp"]


# Python

# NOTE: Pyright V1.1.400 only works when installed via MacPorts -- _not_ when installed
# via Homebrew, despite `hx --health python` showing the correct Homebrew path for pyright

[[language]]
name = "python"
language-servers = ["pyright", "ruff"]
roots = [
  "setup.py",
  "pyproject.toml",
  ".venv",
  ".git",
  "uv.lock",
  "poetry.lock",
]

[language-server.pyright]
command = "pyright-langserver"
args = ["--stdio"]
# config = {}  # <-- 'very important' line that's unnecessary?

# NOT NEEDED
# [language-server.ruff]
# command = "ruff"
# args = ["server", "-q", "--preview"]

[language-server.ruff.config.settings]
lineLength = 80
logLevel = "debug"

[language-server.ruff.config.settings.lint]
select = [
  "E",
  "F",
  "W",
  "B",
  "I",
  "RUF",
  "N",
  "LOG",
  "ERA",
  "W",
  "D",
  "UP",
  "ANN",
  "ASYNC",
  "S",
  "RET",
  "TCH",
  "ARG",
  "PTH",
  "DOC",
]
preview = true

# Per Ruff, these settings will be ignored if there's a pyproject.toml (even with no tool.ruff settings declared)
[language-server.ruff.config.settings.format]
preview = true
quote-style = "double"
docstring-code-format = true
indent-style = "space"
